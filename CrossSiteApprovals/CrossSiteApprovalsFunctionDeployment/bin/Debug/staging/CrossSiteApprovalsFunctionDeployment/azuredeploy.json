{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "crosssiteapp_name": {
      "defaultValue": "cpscrosssiteappdev",
      "type": "string"
    },
    "ClientId": {
      "defaultValue": "",
      "type": "string"
    },
    "ClientSecret": {
      "defaultValue": "",
      "type": "string"
    },
    "TenantName": {
      "defaultValue": "",
      "type": "string"
    },
    "ApprovalSiteUrl": {
      "defaultValue": "",
      "type": "string"
    },
    "DefaultLocation": {
      "defaultValue": "westeurope",
      "type": "string"
    }
  },
  "variables": {
    "appInsights_name": "[concat('appInsights-',parameters('crosssiteapp_name'))]",
    "functions_name": "[concat('functions-',parameters('crosssiteapp_name'))]",
    "functionsService_name": "[concat('functionsPlan-',parameters('crosssiteapp_name'))]",
    "storage_name": "[concat('stor',parameters('crosssiteapp_name'))]",
    "vault_name": "[concat('vault-',parameters('crosssiteapp_name'))]"
  },
  "resources": [
    {
      "apiVersion": "2015-05-01",
      "kind": "web",
      "location": "[parameters('DefaultLocation')]",
      "name": "[variables('appInsights_name')]",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "IbizaWebAppExtensionCreate"
      },
      "type": "microsoft.insights/components"
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "name": "[variables('vault_name')]",
      "location": "[parameters('DefaultLocation')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false
      }
    },
    {
      "apiVersion": "2019-04-01",
      "kind": "Storage",
      "location": "[parameters('DefaultLocation')]",
      "name": "[variables('storage_name')]",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      },
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2016-09-01",
      "name": "[variables('functionsService_name')]",
      "location": "West Europe",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1",
        "family": "Y",
        "capacity": 0
      },
      "kind": "functionapp",
      "properties": {
        "name": "[variables('functionsService_name')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/ClientId')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[parameters('ClientId')]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/ClientSecret')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[parameters('ClientSecret')]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/StorageConnectionString')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/TenantName')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[parameters('TenantName')]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/ApprovalSiteUrl')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[parameters('ApprovalSiteUrl')]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },

    {
      "apiVersion": "2016-10-01",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]"
      ],
      "location": "[parameters('DefaultLocation')]",
      "name": "[concat(variables('vault_name'), '/WebHookEndPoint')]",
      "properties": {
        "attributes": {
          "enabled": true
          //"exp": 1581202814 //TODO: make this dynamic
        },
        "value": "[concat('https://',variables('functions_name'),'.azurewebsites.net/api/CrossSiteApprovalWebhook')]"
      },
      "type": "Microsoft.KeyVault/vaults/secrets"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storage_name'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ],
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "apiVersion": "2016-08-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('functionsService_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('vault_name'))]",
        "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'StorageConnectionString')]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "location": "West Europe",
      "name": "[variables('functions_name')]",
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(parameters('crosssiteapp_name'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Standard"
          },
          {
            "name": "[concat(parameters('crosssiteapp_name'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('functionsService_name'))]",
        "reserved": false,
        "scmSiteAlsoStopped": false,
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 1536,
        "dailyMemoryTimeQuota": 0,
        "httpsOnly": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsights_name')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[Concat('DefaultEndpointsProtocol=https;AccountName=',variables('storage_name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storage_name')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
            },
            {
              "name": "StorageConnectionString",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'StorageConnectionString')).secretUriWithVersion,')')]"
            },
            {
              "name": "ClientId",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'ClientId')).secretUriWithVersion,')')]"
            },
            {
              "name": "ClientSecret",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'ClientSecret')).secretUriWithVersion,')')]"
            },
            {
              "name": "TenantName",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'TenantName')).secretUriWithVersion,')')]"
            },
            {
              "name": "ApprovalSiteUrl",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'ApprovalSiteUrl')).secretUriWithVersion,')')]"
            },
            {
              "name": "WebHookEndPoint",
              "value": "[concat('@Microsoft.KeyVault(SecretUri=',reference(resourceId('Microsoft.KeyVault/vaults/secrets', variables('vault_name'), 'WebHookEndPoint')).secretUri,')')]"
            }
          ]
        }
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2016-08-01",
      "name": "[concat(variables('functions_name'), '/web')]",
      "location": "West Europe",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('functions_name'))]"
      ],
      "properties": {
        "numberOfWorkers": 1,
        "defaultDocuments": [
          "Default.htm",
          "Default.html",
          "Default.asp",
          "index.htm",
          "index.html",
          "iisstart.htm",
          "default.aspx",
          "index.php"
        ],
        "netFrameworkVersion": "v4.0",
        "phpVersion": "5.6",
        "pythonVersion": "",
        "nodeVersion": "",
        "linuxFxVersion": "",
        "requestTracingEnabled": false,
        "remoteDebuggingEnabled": false,
        "remoteDebuggingVersion": "VS2017",
        "httpLoggingEnabled": false,
        "logsDirectorySizeLimit": 35,
        "detailedErrorLoggingEnabled": false,
        "publishingUsername": "$CrossSiteApprovalsFunctionsDev", //TODO: make dynamic
        "scmType": "None",
        "use32BitWorkerProcess": true,
        "webSocketsEnabled": false,
        "alwaysOn": false,
        "appCommandLine": "",
        "managedPipelineMode": "Integrated",
        "virtualApplications": [
          {
            "virtualPath": "/",
            "physicalPath": "site\\wwwroot",
            "preloadEnabled": false,
            "virtualDirectories": null
          }
        ],
        "winAuthAdminState": 0,
        "winAuthTenantState": 0,
        "customAppPoolIdentityAdminState": false,
        "customAppPoolIdentityTenantState": false,
        "loadBalancing": "LeastRequests",
        "routingRules": [],
        "experiments": {
          "rampUpRules": []
        },
        "autoHealEnabled": false,
        "vnetName": "",
        "siteAuthEnabled": false,
        "siteAuthSettings": {
          "enabled": null,
          "unauthenticatedClientAction": null,
          "tokenStoreEnabled": null,
          "allowedExternalRedirectUrls": null,
          "defaultProvider": null,
          "clientId": null,
          "clientSecret": null,
          "clientSecretCertificateThumbprint": null,
          "issuer": null,
          "allowedAudiences": null,
          "additionalLoginParams": null,
          "isAadAutoProvisioned": false,
          "googleClientId": null,
          "googleClientSecret": null,
          "googleOAuthScopes": null,
          "facebookAppId": null,
          "facebookAppSecret": null,
          "facebookOAuthScopes": null,
          "twitterConsumerKey": null,
          "twitterConsumerSecret": null,
          "microsoftAccountClientId": null,
          "microsoftAccountClientSecret": null,
          "microsoftAccountOAuthScopes": null
        },
        "cors": {
          "allowedOrigins": [
            "https://functions.azure.com",
            "https://functions-staging.azure.com",
            "https://functions-next.azure.com"
          ],
          "supportCredentials": false
        },
        "localMySqlEnabled": false,
        "http20Enabled": false,
        "minTlsVersion": "1.2",
        "ftpsState": "AllAllowed",
        "reservedInstanceCount": 0,
        "fileChangeAuditEnabled": false
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storage_name'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-04-01",
      "name": "[concat(variables('storage_name'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storage_name'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storage_name'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2018-02-14",
      "name": "[concat(variables('vault_name'),'/add')]",
      "location": "[parameters('DefaultLocation')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "Standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
          {
            "objectId": "[reference(concat(resourceId('Microsoft.Web/sites', variables('functions_name')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
            "permissions": {
              "keys": [
                "Get",
                "List"
              ],
              "secrets": [
                "Get",
                "List",
                "Set",
                "Delete",
                "Recover",
                "Backup",
                "Restore"
              ],
              "certificates": []
            },
            "tenantId": "[subscription().tenantId]"
          }
        ],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false
      }
    }
  ]
  }